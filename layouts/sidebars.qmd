---
title: "Sidebars"
description: "A sidebar layout creates a sidebar in your Shiny app, typically used for inputs, and a large main area, typically used for outputs." 
---

A sidebar layout creates a sidebar, typically used for inputs, and a large main area, typically used for outputs. 

## Relevant functions

- [ui.layout_sidebar](https://shiny.posit.co/py/api/ui.layout_sidebar.html)  
  `ui.layout_sidebar(sidebar, *args, fillable=True, fill=True, bg=None, fg=None, border=None, border_radius=None, border_color=None, gap=None, padding=None, height=None, **kwargs)`

- [ui.sidebar](https://shiny.posit.co/py/api/ui.sidebar.html#shiny.ui.sidebar)  
  `ui.sidebar(*args, width=250, position='left', open='desktop', id=None, title=None, bg=None, fg=None, class_=None, max_height_mobile=None, gap=None, padding=None)`


:::{.border-bottom .blue .mt-6 .mb-5}
:::

## Sidebar on the left

:::{.column-screen-inset-right style="max-width:800px;"}

<iframe style="height:150px;" class="mb-0 w-100 iframe-border" src="https://shinylive.io/py/app/#h=0&code=NobwRAdghgtgpmAXGKAHVA6VBPMAaMAYwHsIAXOcpMAMwCdiYACAZwAsBLCbJjmVYnTJMAgujxMArhwA6EOWlQB9aUwC8UjligBzOEpYcAJnABGUOgAomcpnc0ZDJ81ZlgAysbMW3E0zrU3AGIaAA4wsLcASjxbezcAWSguJhJySjI3OSibeQgTGlY4OgA3YssuVEkyCWJqqpqilkNSKMQ4u1QoZrkFdHVRdEtFFQ4JFmKyuiiwAF8AXSA" title="Sidebar on the left">
</iframe> 


```{.python filename="app.py" }
from shiny import App, ui

app_ui = ui.page_sidebar( #<<
    ui.sidebar("Sidebar", bg="#f8f8f8"), #<<
    "Main content"
) #<<


def server(input, output, session):
    pass

app = App(app_ui, server)
```

<p class="text-end my-0 p-90 me-2"><a href="https://shinylive.io/py/editor/#code=NobwRAdghgtgpmAXGKAHVA6VBPMAaMAYwHsIAXOcpMAMwCdiYACAZwAsBLCbJjmVYnTJMAgujxMArhwA6EOWlQB9aUwC8UjligBzOEpYcAJnABGUOgAomcpnc0ZDJ81ZlgAysbMW3E0zrU3AGIaAA4wsLcASjxbezcAWSguJhJySjI3OSibeQgTGlY4OgA3YssuVEkyCWJqqpqilkNSKMQ4u1QoZrkFdHVRdEtFFQ4JFmKyuiiwAF8AXSA"><i class="bi bi-pencil me-1"></i> Edit in Shinylive</a></p>
:::

Follow these steps to add a left-side sidebar to your app: 

  1. Add `ui.layout_sidebar()` inside any Shiny UI page method (e.g., `ui.page_fluid()`). `ui.layout_sidebar()` creates a sidebar layout.

  2. Pass `ui.sidebar()`as the first argument of `ui.layout_sidebar()` to create the sidebar. By default, the `position` parameter of `ui.sidebar()` is "left" and the sidebar will appear on the left. 

  3. Supply additional components (output components, cards, text, etc.) to `ui.layout_sidebar()` to define the contents of the main content area.

:::{.border-bottom .blue .my-5}
:::

## Sidebar on the right

:::{.column-screen-inset-right style="max-width:800px;"}

<iframe style="height:150px;" class="mb-0 w-100 iframe-border" src="https://shinylive.io/py/app/#h=0&code=NobwRAdghgtgpmAXGKAHVA6VBPMAaMAYwHsIAXOcpMAMwCdiYACAZwAsBLCbJjmVYnTJMAgujxMArhwA6EOWlQB9aUwC8UjligBzOEpYcAJnABGUOkwAUTOU3uaMhk+bpWZYAMrGzFjxIFDMg5SNQ86Dh02Mn8mUx0wsABiGgAONLSPAEo8OwcPAFkoLiYSckoYsDks23kIExpWODoAN2arLlRJMglibq6eppZDUizEPPtUKGG5BXR1UXQrRRUOCRZmtros2YgwAF8AXSA" title="Sidebar on the right">
</iframe> 


```{.python filename="app.py" }
from shiny import App, ui

app_ui = ui.page_sidebar ( #<<
    ui.sidebar("Sidebar", position="right", bg="#f8f8f8"), #<<
    "Main content"
) #<<

def server(input, output, session):
    pass

app = App(app_ui, server)
```

<p class="text-end my-0 p-90 me-2"><a  href="https://shinylive.io/py/editor/#code=NobwRAdghgtgpmAXGKAHVA6VBPMAaMAYwHsIAXOcpMAMwCdiYACAZwAsBLCbJjmVYnTJMAgujxMArhwA6EOWlQB9aUwC8UjligBzOEpYcAJnABGUOkwAUTOU3uaMhk+bpWZYAMrGzFjxIFDMg5SNQ86Dh02Mn8mUx0wsABiGgAONLSPAEo8OwcPAFkoLiYSckoYsDks23kIExpWODoAN2arLlRJMglibq6eppZDUizEPPtUKGG5BXR1UXQrRRUOCRZmtros2YgwAF8AXSA"><i class="bi bi-pencil me-1"></i> Edit in Shinylive</a></p>
:::

Follow these steps to add a right-side sidebar to your app: 
  
  1. Add `ui.layout_sidebar()` inside any Shiny UI page method (e.g., `ui.page_fluid()`). `ui.layout_sidebar()` creates a sidebar layout.
  
  2. Pass `ui.sidebar()`as the first argument of `ui.layout_sidebar()` to create the sidebar. 
  
  3. Pass `position="right"` to `ui.sidebar()`. The `position` argument controls where the sidebar appears relative to the main content.
  
  3. Supply components (e.g., inputs) to `ui.sidebar()` to define the sidebar's contents. Supply additional components (e.g., output components, cards, etc.) to `ui.layout_sidebar()` to define the contents of the main content area. 

:::{.border-bottom .blue .my-5}
:::

## Sidebar within a card

:::{.column-screen-inset-right style="max-width:800px;"}

<iframe style="height:125px;" class="mb-0 w-100" src="https://shinylive.io/py/app/#h=0&code=NobwRAdghgtgpmAXGKAHVA6VBPMAaMAYwHsIAXOcpMAMwCdiYACAZwAsBLCbJjmVYnTJMAgujxMArhwA6EOWlQB9aUwC8UjligBzOEpoAbaQBMAFHKZXNGQlDrmml6y+kZDUbMUlklLDiZwAEb2Zk4QLpHWbv6BIXQWYADKAcH2MvhMQTpqGQDENAAcRUUZAJQSzlEuGQDC9iZMJOSUZBl4VZEV4S5l4WVycoE0rHB0AG5jZlyoPhLeZLNkEixwLP6kZYidqFDrg-LQ6Oqi6GaKKhwrY5N0ZWAAvgC6QA" title="Sidebar within a card">
</iframe> 


```{.python filename="app.py" }
from shiny import App, ui

app_ui = ui.page_fluid(
    ui.card( #<<
        ui.layout_sidebar( #<<
            ui.sidebar("Sidebar", bg="#f8f8f8"), #<<
            "Card content",
        ), #<<
    ) #<<
)

def server(input, output, session):
    pass


app = App(app_ui, server)
```

<p class="text-end my-0 p-90 me-2"><a href="https://shinylive.io/py/editor/#code=NobwRAdghgtgpmAXGKAHVA6VBPMAaMAYwHsIAXOcpMAMwCdiYACAZwAsBLCbJjmVYnTJMAgujxMArhwA6EOWlQB9aUwC8UjligBzOEpoAbaQBMAFHKZXNGQlDrmml6y+kZDUbMUlklLDiZwAEb2Zk4QLpHWbv6BIXQWYADKAcH2MvhMQTpqGQDENAAcRUUZAJQSzlEuGQDC9iZMJOSUZBl4VZEV4S5l4WVycoE0rHB0AG5jZlyoPhLeZLNkEixwLP6kZYidqFDrg-LQ6Oqi6GaKKhwrY5N0ZWAAvgC6QA"><i class="bi bi-pencil me-1"></i> Edit in Shinylive</a></p>
:::

Follow these steps to add a sidebar within a card to your app:
    
  1. Add `ui.card()` to the UI of your app to create a card.
  2. Pass `ui.layout_sidebar()` to `ui.card()` to define a sidebar layout within the card.
  3. Add `ui.sidebar()` and additional elements to `ui.layout_sidebar()` to define the sidebar and main content as usual.
  4. Add inputs or other components as desired to `ui.sidebar()` to define the sidebar's contents.

:::{.border-bottom .blue .my-5}
:::

## Collapsed sidebar

:::{.column-screen-inset-right style="max-width:800px;"}

<iframe style="height:150px;" class="mb-0 w-100 iframe-border" src="https://shinylive.io/py/app/#h=0&code=NobwRAdghgtgpmAXGKAHVA6VBPMAaMAYwHsIAXOcpMAMwCdiYACAZwAsBLCbJjmVYnTJMAgujxMArhwA6EOWlQB9aUwC8UjligBzOEpYcAJnABGUOgAo5TW5oyGT5qzLABlY2YuuJpnWtcAYhoADlDQnyZiVEoAogAbYhY4I1cASjwbO1cAWSguJhJySjJXJjk08vlqkxpWODoANwbLLlRJMgliDvbO+pZDUjTELNtUKAG5BXR1UXRLRRUOCWSmhrSwAF8AXSA" title="Collapsed sidebar">
</iframe> 


```{.python filename="app.py" }
from shiny import App, ui

app_ui = ui.page_sidebar(
    ui.sidebar("Sidebar", bg="#f8f8f8", open="closed"), #<<
    "Main content" 
) 


def server(input, output, session):
    pass

app = App(app_ui, server)
```

<p class="text-end my-0 p-90 me-2"><a href="https://shinylive.io/py/editor/#code=NobwRAdghgtgpmAXGKAHVA6VBPMAaMAYwHsIAXOcpMAMwCdiYACAZwAsBLCbJjmVYnTJMAgujxMArhwA6EOWlQB9aUwC8UjligBzOEpYcAJnABGUOgAo5TW5oyGT5qzLABlY2YuuJpnWtcAYhoADlDQnyZiVEoAogAbYhY4I1cASjwbO1cAWSguJhJySjJXJjk08vlqkxpWODoANwbLLlRJMgliDvbO+pZDUjTELNtUKAG5BXR1UXRLRRUOCWSmhrSwAF8AXSA"><i class="bi bi-pencil me-1"></i> Edit in Shinylive</a></p>
:::


`ui.sidebar()` has an `open` parameter that defines whether the sidebar appears open or closed when the app launches. To create a sidebar that is initially closed, set the `open` parameter to `"closed"`.  
  
The other options for `open` are:
  
  * `"desktop"`: The default. The sidebar starts open on a desktop screen and closed on mobile.
  * `"open"`: The sidebar starts open and can be closed.
  * `"always"`: The sidebar is always open and cannot be closed.

