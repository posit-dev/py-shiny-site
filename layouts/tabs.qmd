---
title: "Tabs"
sidebar: components 
preview: |
  <div class="indigo w-100 h-100">HI THERE</div>
---

## Description

Tabs and navigation allow you to create apps that have multiple pages.

## Relevant functions

- title: ui.accordion
  href: https://shiny.posit.co/py/api/ui.accordion.html#shiny.ui.accordion
  signature: ui.accordion(*args, id=None, open=None, multiple=True, class_=None, width=None, height=None, **kwargs)

- title: ui.accordion_panel
  href: https://shiny.posit.co/py/api/ui.accordion_panel.html
  signature: ui.accordion_panel(title, *args, value=MISSING, icon=None, **kwargs)

- title: ui.navset_card_tab
  href: https://shiny.posit.co/py/api/ui.navset_card_tab.html
  signature: ui.navset_card_tab(*args, id=None, selected=None, title=None, sidebar=None, header=None, footer=None)

- title: ui.navset_card_pill
  href: https://shiny.posit.co/py/api/ui.navset_card_pill.html
  signature: ui.navset_card_pill(*args, id=None, selected=None, title=None, sidebar=None, header=None, footer=None, placement='above')

- title: ui.navset_pill
  href: https://shiny.posit.co/py/api/ui.navset_pill.html
  signature: ui.navset_pill(*args, id=None, selected=None, header=None, footer=None)
  
- title: ui.navset_pill_list
  href: https://shiny.posit.co/py/api/ui.navset_pill_list.html
  signature: ui.navset_pill_list(*args, id=None, selected=None, header=None, footer=None, well=True, widths=(4, 8))

- title: ui.navset_tab
  href: https://shiny.posit.co/py/api/ui.navset_tab.html
  signature: ui.navset_tab(*args, id=None, selected=None, header=None, footer=None)

## Section - Tabset with pill navigation

- preview: https://shinylive.io/py/app/#h=0&code=NobwRAdghgtgpmAXGKAHVA6VBPMAaMAYwHsIAXOcpMAMwCdiYACAZwAsBLCbJjmVYnTJMAgujxMArhwA6EOWlQB9aUwC8UjligBzOEpoAbaQBMAFHKZXNGaADcWcMktQdDhixGveb9i2BEZfCYggAVdOFEmEnJKMiCASjxLHytpWyg7fwAhIIkwiKZs6NIKckTkr1TfTP8AYTyQsHC9JjqS2PKwJJTU9PsleAhJT2qfIIB5MjY4OiZDLgBrFjzesZqsoIARRoLWrY6y+O7K9esggFori9Wqs+24FkI6DlQyDlJEW7O0rQGYsgMDxrH42KD+ADqcAARgsIItGmw6HAaGoggBVABKABlGmQoHQ9GQ0WAlLCoPDEiDqj07j5aWMOCZ1E18dCgmsEnIufIICYUaxZnZZmYuKhJGQJMQJeLJYKWCwPhAEl86agoAq5Ap0CyxKgzIoVBwJI46MK6DywABfAC6QA
- code: |
    
    from shiny import App, ui
    
    app_ui = ui.page_fluid(
        ui.navset_pill(
            ui.nav("A", "Page A content"),
            ui.nav("B", "Page B content"),
            ui.nav("C", "Page C content"),
            ui.nav_menu(
                "Other links",
                ui.nav("D", "Page D content"),
                "----",
                "Description:",
                ui.nav_control(
                    ui.a("Weblink", href="URL", target="_blank")
                ),
            ),
            id = "tab"
        )
    )
    
    def server(input, output, session):
        pass
    
    app = App(app_ui, server)

- details: |
  
    Follow these steps to create an app with a tabset with pill navigation layout: 
  
    1. Add `ui.navset_pill()` inside any Shiny UI page method (e.g., `ui.page_fluid()`). `ui.navset_pill()` creates a pillset. 
    
    2. Pass nav items (e.g., [`ui.nav()`](https://shiny.posit.co/py/api/ui.nav.html) and [`ui.nav_menu()`](https://shiny.posit.co/py/api/ui.nav_menu.html)) to `ui.navset_pill()` to set the items displayed in the navset. 
    
    3. Pass arguments to the nav items to control each item's title, appearance, and associated content. For example, set the `title` argument of `ui.nav()` to control the displayed title of the nav item. Pass UI elements as additional arguments to `ui.nav()`. These elements will be displayed when the tab is active.

## Section - Tabset with pill list navigation

- preview: https://shinylive.io/py/app/#h=0&code=NobwRAdghgtgpmAXGKAHVA6VBPMAaMAYwHsIAXOcpMAMwCdiYACAZwAsBLCbJjmVYnTJMAgujxMArhwA6EOWlQB9aUwC8UjligBzOEpoAbaQBMAFHKZXNGaADcWcMktQdDhpYY4syFiNYCbewswERl8JnCABV04USYSckoycIBKPEtAq2lbKDsQgCFwiWjYpgKE0gpyNIz-LKC8kIBhYsiwGL0mZsqkmrB0zKyc+yV4CEk-BsDwgHkyNjg6Ji8IAGsWYqHpxvzwgBE20q793uqUgbqd63CAWnvbrfrrg7gWQjoOVDIOUkQn67ZLSjRJkBiGKaAgI5KAhADqcAARqs1m02HQ4DQ1OEAKoAJQAMm0yFA6HoyNiwEpkVB1mlttNBs9AkzphwTOp2iTEeFtqk5Pz5BATJjWEs7EszFxUJIyBJiLKZXKxSwWL8IKl-syMWRJHR-AA5UhwOQKdCcsSoMyKFQcCSOOgSuipMAAXwAukA
- code: |
    
    from shiny import App, ui
    
    app_ui = ui.page_fluid(
        ui.navset_pill_list(
            ui.nav("A", "Page A content"),
            ui.nav("B", "Page B content"),
            ui.nav("C", "Page C content"),
            ui.nav_menu(
                "Other links",
                ui.nav("D", "Page D content"),
                "----",
                "Description:",
                ui.nav_control(
                    ui.a("Weblink", href="URL", target="_blank")
                ),
            ),
            id = "tab"
        )
    )
    
    def server(input, output, session):
        pass
    
    app = App(app_ui, server)
- details: |

    Follow these steps to create an app with a pill list navigation layout. A pill list is a vertical pillset navigation. 
  
    1. Add `ui.navset_pill_list()` inside any Shiny UI page method (e.g., `ui.page_fluid()`). `ui.navset_pill()` creates a pill list. 
    
    2. Pass nav items (e.g., [`ui.nav()`](https://shiny.posit.co/py/api/ui.nav.html) and [`ui.nav_menu()`](https://shiny.posit.co/py/api/ui.nav_menu.html)) to `ui.navset_pill_list()` to set the items displayed in the pillset. 
    
    3. Pass arguments to the nav items to control each item's title, appearance, and associated content. For example, set the `title` argument of `ui.nav()` to control the displayed title of the nav item. Pass UI elements as additional arguments to `ui.nav()`. These elements will be displayed when the tab is active. 

## Section - Tabset with tab navigation

- preview: https://shinylive.io/py/app/#h=0&code=NobwRAdghgtgpmAXGKAHVA6VBPMAaMAYwHsIAXOcpMAMwCdiYACAZwAsBLCbJjmVYnTJMAgujxMArhwA6EOWlQB9aUwC8UjligBzOEpoAbaQBMAFHKZXNGaADcWcMkrJQARhYjXvN+xbAiMvhMQQAKunCiTCTklGRBAJR4lj5W0rZQdv4AQkESYRFM2dGkFOSJyV6pvpn+AMJ5IWDhekx1JbHlYEkpqen2SvAQkp7VPkEA8mRscHRMhlwA1ix5vWM1WUEAIo0FrVsdZfHdlevWQQC0VxerVWfbcCyEdByoZBykiLdnaVoDMWQGIZRj9vOkoP4AOpwNwLCCLRpsOhwGhqIIAVQASgAZRquOh6MhosBKWFQeGJNZjHp3Hw0sYcEzqJquNxBNYJOSc+QQEwo1izOyzMxcVCSMgSYjisUSgUsFgfCAJL601BQeVyBToZliVBmRQqDgSRx0IV0BJgAC+AF0gA
- code: |

    from shiny import App, ui
    
    app_ui = ui.page_fluid(
        ui.navset_tab(
            ui.nav("A", "Page A content"),
            ui.nav("B", "Page B content"),
            ui.nav("C", "Page C content"),
            ui.nav_menu(
                "Other links",
                ui.nav("D", "Page D content"),
                "----",
                "Description:",
                ui.nav_control(
                    ui.a("Weblink", href="URL", target="_blank")
                ),
            ),
            id = "tab"
        )
    )
    
    def server(input, output, session):
        pass
    
    app = App(app_ui, server)
- details: |

    Follow these steps to create an app with a tab navigation layout:
  
    1. Add `ui.navset_tab()` inside any Shiny UI page method (e.g., `ui.page_fluid()`). `ui.navset_tab()` creates a tabset. 
    
    2. Pass nav items (e.g., [`ui.nav()`](https://shiny.posit.co/py/api/ui.nav.html) and [`ui.nav_menu()`](https://shiny.posit.co/py/api/ui.nav_menu.html)) to `ui.navset_tab()` to set the items displayed in the tabset. 
    
    3. Pass arguments to the nav items to control each item's title, appearance, and associated content. For example, set the `title` argument of `ui.nav()` to control the displayed title of the nav item. Pass UI elements as additional arguments to `ui.nav()`. These elements will be displayed when the tab is active. 

## Section - Card with a tabbed tabset

- preview: https://shinylive.io/py/app/#h=0&code=NobwRAdghgtgpmAXGKAHVA6VBPMAaMAYwHsIAXOcpMAMwCdiYACAZwAsBLCbJjmVYnTJMAgujxMArhwA6EOWlQB9aUwC8UjligBzOEpoAbaQBMAFHKZXNGaADcWcMksJQ6JpWSgAjCxGsBNvYWYCIy+EzhAAq6cKJMJOSUZOEAlHiWgVbStlB2IQBC4RLRsUwFCaQU5GkZ-llBeSEAwsWRYDF6TM2VSTVg6ZlZOfZK8BCSfg2B4QDyZGxwdEyGXADWLMVD04354QAibaVd+73VKQN1O9bhALT3t1v11wdwLIR0HKhkHKSIT9dslpRokyAxDFNAQEclAQgB1ODeVYQNZtNh0OA0NThACqACUADJtLx0PRkbFgJRIqAotLbaaDZ6BRnTDgmdTtLzecLbVJyPnyCAmTGsJZ2JZmLioSRkCTEGXS2WilgsX4QVL-JmoKAquQKdAcsSoMyKFQcCSOOjiuipMAAXwAukA
- code: |

    from shiny import App, ui
    
    app_ui = ui.page_fluid(
        ui.navset_card_tab(
            ui.nav("A", "Page A content"),
            ui.nav("B", "Page B content"),
            ui.nav("C", "Page C content"),
            ui.nav_menu(
                "Other links",
                ui.nav("D", "Page D content"),
                "----",
                "Description:",
                ui.nav_control(
                    ui.a("Weblink", href="URL", target="_blank")
                ),
            ),
            id = "tab"
        )
    )
    
    def server(input, output, session):
        pass
    
    app = App(app_ui, server)
- details: |

    Follow these steps to add a card with a tabbed tabset to your app: 
  
    1. Add `ui.navset_card_tab()` inside any Shiny UI page method (e.g., `ui.page_fluid()`). `ui.navset_card_tab()` creates a tabset inside a card. 
    
    2. Pass nav items (e.g., [`ui.nav()`](https://shiny.posit.co/py/api/ui.nav.html) and [`ui.nav_menu()`](https://shiny.posit.co/py/api/ui.nav_menu.html)) to `ui.navset_card_tab()` to set the items displayed in the tabset inside the card. 
    
    3. Pass arguments to the nav items to control each item's title, appearance, and associated content. For example, set the `title` argument of `ui.nav()` to control the displayed title of the nav item. Pass UI elements as additional arguments to `ui.nav()`. These elements will be displayed when the tab is active. 
    

## Section - Card with a pill tabset

- preview: https://shinylive.io/py/app/#h=0&code=NobwRAdghgtgpmAXGKAHVA6VBPMAaMAYwHsIAXOcpMAMwCdiYACAZwAsBLCbJjmVYnTJMAgujxMArhwA6EOWlQB9aUwC8UjligBzOEpoAbaQBMAFHKZXNGQlDrnL159IyGo2YpLJKWHE3AARvYWEM7h1q5+AcF0FmAAyv5B9jJgAJR4ThHOaQCyUFxMJOSUZGlZYTmZ2UzpcvXyEAE0rHB0AG7tZlyo3hJeZH1kEixwLH6k6Yi1qFATcovQ6Oqi6GaKKhyj7V10jWAAvgC6QA
- code: |

    from shiny import App, ui
    
    app_ui = ui.page_fluid(
        ui.navset_card_pill(
            ui.nav("A", "Page A content"),
            ui.nav("B", "Page B content"),
            ui.nav("C", "Page C content"),
            ui.nav_menu(
                "Other links",
                ui.nav("D", "Page D content"),
                "----",
                "Description:",
                ui.nav_control(
                    ui.a("Weblink", href="URL", target="_blank")
                ),
            ),
            id = "tab"
        )
    )
    
    def server(input, output, session):
        pass
    
    app = App(app_ui, server)
- details: |

    Follow these steps to add a card with a pill tabset to your app: 
  
    1. Add `ui.navset_card_pill()` inside any Shiny UI page method (e.g., `ui.page_fluid()`). `ui.navset_card_pill()` creates a pillset inside a card. 
    
    2. Pass nav items (e.g., [`ui.nav()`](https://shiny.posit.co/py/api/ui.nav.html) and [`ui.nav_menu()`](https://shiny.posit.co/py/api/ui.nav_menu.html)) to `ui.navset_card_pill()` to set the items displayed in the pillset inside the card. 
    
    3. Pass arguments to the nav items to control each item's title, appearance, and associated content. For example, set the `title` argument of `ui.nav()` to control the displayed title of the nav item. Pass UI elements as additional arguments to `ui.nav()`. These elements will be displayed when the tab is active. 

## Section - Vertically collapsing accordion panels

- preview: https://shinylive.io/py/app/#h=0&code=NobwRAdghgtgpmAXGKAHVA6VBPMAaMAYwHsIAXOcpMAMwCdiYACAZwAsBLCbJjmVYnTJMAgujxMArhwA6EOWlQB9aUwC8UjligBzOEpoAbaQBMAFHKZXNGKIRJ0THUhYjX3Nuw6eklqKBBwhhZgAMpwhGTObiIy+Exx4ZHRokwk5JRkcQCUeJYeVtK29oI+EH4BQSFJUaRMAEJxEokRtW71aaQU5Dl5bgWeJY7RFYHBLcl1AMJNCWGtKVOdGT1gufkFRV6lI-5j1Qt1ACKzE21MR8vdWWt9A4Peu5Xj85NuAKKnr+fvV5m9Gw8HBMajiXiagPcxFQlHUcxqKViYEB6wg2TkchMcBorDgdAAbnizFxUJIyBJiGTSeTcSwWNFsohAf46RjoOg4WJUGZFCoOBIWHjCXRsmAAL4AXSAA
- code: |

    from shiny import App, ui
    
    app_ui = ui.page_fluid(
        ui.accordion(
            ui.accordion_panel("Section A", "Section A content"),
            ui.accordion_panel("Section B", "Section B content"),
            ui.accordion_panel("Section C", "Section C content"),
            ui.accordion_panel("Section D", "Section D content"),
            ui.accordion_panel("Section E", "Section E content"),
            id="acc",
            open = "Section A"
        ),
    )
    
    def server(input, output, session):
        pass
    
    app = App(app_ui, server)

- details: |
  
    Follow these steps to add vertically collapsing accordion panels to your app:
  
    1. Add `ui.accordion()` inside any Shiny UI page method (e.g., `ui.page_fluid()`). `ui.accordion()` creates a vertically collapsing accordion. 
    
    2. Pass accordion panel items to `ui.accordion()` using calls to `ui.accordion_panel()`. Each call to `ui.accordion_panel()` creates one accordion panel. 
    
    3. Pass arguments to the accordion panels to control each panel's title, appearance, and associated content. The `*args` argument of `ui.accordion_panel()` controls the contents of the accordion panel. 
