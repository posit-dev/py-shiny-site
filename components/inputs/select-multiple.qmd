---
title: "Select (Multiple)"
sidebar: components 
previewapp: |
  from shiny import App, Inputs, Outputs, Session, render, ui

  app_ui = ui.page_fluid(
    ui.input_select(
        "select",
        "",
        {
            "1": {"1A": "Choice 1A", "1B": "Choice 1B", "1C": "Choice 1C"},
            "2": {"2A": "Choice 2A", "2B": "Choice 2B", "2C": "Choice 2C"}
        },
        multiple=True        
    ),
    ui.output_text("value"),
      {"class": "vh-100 d-flex justify-content-center align-items-center px-4"}
  )

  def server(input: Inputs, output: Outputs, session: Session):
      @render.text
      def value():
          return f""

  app = App(app_ui, server)
listing:
  id: component
  template: ../_partials/components-detail.ejs
  contents:
    - title: Select (Multiple)
      preview: https://shinylive.io/py/app/#h=0&code=NobwRAdghgtgpmAXGKAHVA6VBPMAaMAYwHsIAXOcpMAMwCdiYACAZwAsBLCbJjmVYnTJMAgujxM6lACZw6EgK4cAOhFVpUAfSVMAvEyVYoAcziaaAGyXSAFKqYODHDF1QKymlnAtxCZG0wAxAA8wfaOEcpgXj5+URIhYRARkWAAyt6+wsSoZBykLEwARt7EAO6I8UGh4SlMIFEAjCJRiExRAMJsxByEcEzNVU0AQq3tYF09fQOj+OONHWOd3b39C1EAvgk1yXVMMAoWeag+ugAqdAr9ibVMAJTbSRGGxO5uHhQAHv5RAG5QVjgUQeqjuqlUshorDkvzkNlc7gkrzI7wkXhYLHyEDulV2DgAAlIILI6BgvmRbpCmP9ATYcbcIlIyAo6MkaFEQAiyBgYlk6RsouDoOg9KJ0DYNNoOGiYXI7mANgBdIA
      code: |
        from shiny import App, render, ui
        
        app_ui = ui.page_fluid(
            ui.input_select( #<<
                "select", #<<
                "Select options below:", #<<
                {"1A": "Choice 1A", "1B": "Choice 1B", "1C": "Choice 1C"}, #<<
                multiple=True #<<
            ), #<<
            ui.output_text("value"),
        )
        
        def server(input, output, session):
            @render.text
            def value():
                return f"{input.select()}"
        
        app = App(app_ui, server)
      relevantfunctions:
        - title: ui.input_select
          href: https://shiny.posit.co/py/api/ui.input_select.html
          signature: ui.input_select(id, label, choices, *, selected=None, multiple=False, selectize=False, width=None, size=None)
      variations:
        - title: Select list with grouped choices
          description: To group the choices into categories, supply the `choices` argument with a dictionary of dictionaries. `ui.input_select()` will use the top-level keys as group labels.
          preview: https://shinylive.io/py/app/#h=0&code=NobwRAdghgtgpmAXGKAHVA6VBPMAaMAYwHsIAXOcpMAMwCdiYACAZwAsBLCbJjmVYnTJMAgujxM6lACZw6EgK4cAOhFVpUAfSVMAvEyVYoAcziaaAGyXSAFKqYODHDF1QKymlnAtxCZG0wAxAA8wfaOEcpgXj5+URIhYRARkWAAyt6+wsSoZBykLEwARt7EAO6I8UGh4SlMINVJdXVRAIxRiPVtIh1MUQDCbMQchHBMrT34fWCtAEK9A0MjY3NVbf0LYIPDo+MbYAC+CTXJzakATL0gUeeTnYs7Y7drYOfzSNPby0xvL+f79y2S12-yiB0atRSRwhpzqMAUFjyqB8ugAKnQFGNEpCAJTHJqOQzEdxuDwUAAe-iiADcoFY4FE8aocapVLIaKw5NS5DZXO4JMSyKSJF4WCx8hAcZVYUwAAJSCCyOgYClkSHspi0+k2KWQiJSMgKOjJGhREB8sgYGJZHUHKKs6DoPSidA2DTaDgirlyHGHAC6QA
          code: |
            from shiny import App, render, ui
            
            app_ui = ui.page_fluid(
                ui.input_select( #<<
                    "select", #<<
                    "Select options below:", #<<
                    { #<<
                        "1": {"1A": "Choice 1A", "1B": "Choice 1B", "1C": "Choice 1C"}, #<<
                        "2": {"2A": "Choice 2A", "2B": "Choice 2B", "2C": "Choice 2C"} #<<
                    }, #<<
                    multiple=True #<<
                ), #<<
                ui.output_text("value"),
            )
            
            def server(input, output, session):
                @render.text
                def value():
                    return f"{input.select()}"
            
            app = App(app_ui, server)
---

:::{#component}
:::

## Details

<p>A select list creates a way to select one or more items from a list.</p>

<p>To add a select list that allows you to select <em>multiple</em> items to your app: </p>

<ol>
  <li>
  Add `ui.input_select()` to the UI of your app to create a select list. Where you call this function will determine where the select list appears within the app's layout. 
  </li>
  <li>
  Specify the `id` and `label` parameters of `ui.input_select()` to define the identifier and label of the select list.
  </li>
  <li>
  Supply the `choices` parameter with either a list or dictionary of choices. If `choices` is a list, its elements become the select list values and labels. If `choices` is a dictionary, `ui.input_select()` uses the dictionary keys as the list values and the dictionary values as the list labels. 

  You can also supply with `choices` a dictionary of dictionaries. `ui.input_select()` will use the top-level keys as group labels. See <em>Select list with grouped choices</em> below.
  </li>
  <li>
  Set the `multiple` parameter to `True` to allow the user to select multiple items at once. By default, `multiple` is `False`.
  </li>
</ol>

The value of an input component is accessible as a reactive value within the `server()` function. To access the value of a select list:</p>

<ol>
  <li>
  Use `input.<select_id>()` (e.g., `input.select()`) to access the selected value(s). The server value of a select list is a list of strings.
  </li>
</ol>

<p>See also: Select (Single) (TODO: ADD LINK TO Select (Single) HERE) and Selectize (Multiple) (TO DO ADD SELECTIZE MULTIPLE LINK HERE). Select inputs and selectize inputs are similar, but have different interfaces and provide different ways of selecting multiple options. Selectize inputs also allow you to deselect items.</p>
