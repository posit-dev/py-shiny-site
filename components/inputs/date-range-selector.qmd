---
title: "Date Range Selector"
sidebar: components 
previewapp: |
  from shiny import App, render, ui

  app_ui = ui.page_fluid(
      ui.input_date_range("x", ""),
      ui.output_text_verbatim("txt"),
      {"class": "vh-100 d-flex justify-content-center align-items-center px-4"}
  )

  def server(input, output, session):
      @render.text
      def txt():
          return f""

  app = App(app_ui, server, debug=True)

listing:
  id: daterangeselector
  template: ../_partials/components-detail.ejs
  contents:
    - title: Date Range Selector
      preview: |
        https://shinylive.io/py/app/#h=0&code=NobwRAdghgtgpmAXGKAHVA6VBPMAaMAYwHsIAXOcpMAMwCdiYACAEygrIEt4nvVi6ZVuzgAdCOPqMmAZwAWnCNl4x+gpgEF0eJnUos4dHQFdO48WlQB9U0wC8TU1igBzOFZoAbUywAU4pkDHTgxFVGMyKzYKKzooCDd-MGjDeLdRfCYMgBERXTSxTJkyKEE7DIAmAAZqgFoqgEZ6hoyASjwAoKdiCPDIigAPMiSANyhvQvbxVvMJCAMaWUMRw18wiJ0esj6dGTgZGU5SVsROwIABLb6zpnO9ecMMQbIbhaYxid8Tm6DdODJjHQIEwaBkQOsyBgUnEEnAvsAqgBdAC+TDIxCY4IgfShIhhiVawAaKIysws6HsmnQvksNk4u2WhlaYGRiKAA
      code: |
        from datetime import date
        
        from shiny import App, render, ui
        
        app_ui = ui.page_fluid(
            ui.input_date_range("daterange", "Date range", start="2020-01-01"), #<<
            ui.output_text("value"),
        )
        
        def server(input, output, session):
            @render.text
            def value():
                return f"{input.daterange()[0]} to {input.daterange()[1]}"
        
        app = App(app_ui, server)
      relevantfunctions:
        - title: ui.input_date_range
          href: https://shiny.posit.co/py/api/ui.input_date_range.html
          signature: ui.input_date_range(id, label, *, start=None, end=None, min=None, max=None, format='yyyy-mm-dd', startview='month', weekstart=0, language='en', separator=' to ', width=None, autoclose=True)
      details: |

        <p>A date range selector allows you to select a pair of dates from two calendars. </p>

        <p>To add a date range selector to your app:</p>

        <ol>
          <li>
          Add `ui.input_date_range()` to the UI of your app to create a div in which to display the date range selector. Where you call this function will determine where the date range selector will appear within the app's layout. 
          </li>
          <li>
          Specify the `id` and `label` parameters of `ui.input_date_range()` to define the identifier and label of the daterange selector. `ui.input_date_range()` also includes various optional parameters, including `start` and `end`, which set the initial start and end dates.
          </li>
        </ol>
        
        <p>To access the value of the daterange selector:</p>
        
        <ol>
          <li>
          Use `input.<date_range_id>()` to access the value of your daterange selector (e.g., `input.daterange()`). The server value of a daterange selector is a tuple of date objects. You can access the individual tuple elements using square brackets and indices (e.g., `input.daterange()[0]`).
          </li>
        </ol>

        <p>See also: Date Selector (TODO: ADD LINK TO DATE SELECTOR HERE)</p>
---

:::{.daterangeselector}
:::

