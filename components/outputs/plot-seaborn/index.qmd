---
title: Plot (Seaborn)
sidebar: components
preview: '<div class="px-3"> <p class="mb-0"> <img style="width: 100%;height:auto;max-height:130px;"
  src="/images/seaborn.jpg"> </p> </div> '
listing:
- id: example
  template: ../../_partials/components-detail-example.ejs
  template-params:
    dir: components/outputs/plot-seaborn/
  contents:
  - title: Preview
    file: app-core.py
    height: 500
  - title: Express
    file: app-express.py
    shinylive: https://shinylive.io/py/editor/#code=NobwRAdghgtgpmAXAAjFADugdOgnmAGlQGMB7CAFzkqVQEsZ1SAnC5AZzigCMWJko7DhHYAdCADNmpGMnRQANvGbpqAcwCudEcgZNWyBaSgATAPqqIm7WMnTZ7ABbbcuxizbNqJuM3FSZDmcIXCw4AA90L3YhPQ9dCHQNCiItcXFLax0AXkNjc0ytEQAKAEp0iC0sbSSKM3YFOh9mYtFINqI2gDkNGG5fZFIJZG4bDuQARiIJgAYZogAmGfKICoABLwhmnCMKYsUKbLaAQWQAZS5eZn5ndgpSNWZYQf5C7RHSE1cYQVj+R9g7CwbVKyGQAGJkAAeKHiHzDdC7MooCHQ2H8MECcLIXLsERYW4URGkPYmKAUKDZN4iIjhI5gXhfMw-GJmNTjUYibI1ZJYCBlUGomHiTFYrCcOoUOgUBRwVpgAAKimUyAV6iKYjAK1FUHC4rgdXCCh4cAU8oAsr9kMU1OUtSLMbr9XVcMb+ma2gBhUgaSggh1grwUDTXLFgyHCiCEVAUXCqWhgKjhChgAC+AF0gA
  - title: Core
    file: app-core.py
    shinylive: https://shinylive.io/py/editor/#code=NobwRAdghgtgpmAXAAjFADugdOgnmAGlQGMB7CAFzkqVQEsZ1SAnC5AZzigCMWJko7DhHYAdCADNmpGMnRQANvGbpqAcwCudEcgZNWyBaSgATAPqqIm7WMnTZ7ABbbcuxizYBBTEWbUTcMxEWuLiltY6ALyGxubhWiIAFACUodCYZlrI0Vo4UGpwZhIKWiaJ4siVyLna6BoUZuwKdAHM5ZCihMidAHIaMNyByKQSyNw2nUQAjNMADLNEAEyzyQQVVbmk9XUN6EYU7XukFJ2rlQDEyAA8V+KpEGkBo5zMAG6BibX1RFsUO0ScdjsOjkZKIdaVAACfggrRw+0SigokU6nmQAGUuLxmPxnOwKKQ1MxYMN+PFtGNSCZXDBBEIKUTYOwsKcLtdbvwqk85AiwWybhCqpUoAAPbLCZl4v4IkxQChQSLkkREEUosC8almWlAsxqSZjGyRL4ULAQFLJfkcoVC0VYTgNCh0CgKODtAAKimUyDd6gSYjA92tVVt9rMIoUPDgCnaAFk6chEmpUgHBTaRXa4A1cBHBtHOgBhLaUU6pqp+CgaHECMXIS4Ch4NjDocXedCIjJaAGBd5BZABbgaNSRAAqzA0cHuXTAFFwqlo07gIooYAAvgBdIA
- id: relevant-functions
  template: ../../_partials/components-detail-relevant-functions.ejs
  template-params:
    dir: components/outputs/plot-seaborn/
  contents:
  - title: ui.output_plot
    href: https://shiny.posit.co/py/api/ui.output_plot.html
    signature: ui.output_plot(id, width='100%', height='400px', *, inline=False, click=False,
      dblclick=False, hover=False, brush=False, fill=MISSING)
  - title: '@render.plot'
    href: https://shiny.posit.co/py/api/render.plot.html
    signature: render.plot(_fn=None, *, alt=None, width=MISSING, height=MISSING, **kwargs)
---

:::{#example}
:::

:::{#relevant-functions}
:::

## Details

Seaborn is a statistical plotting library that builds on top of Matplotlib.

Follow these steps to display a Seaborn figure in your app:


  1. Add `ui.output_plot()` to the UI of your app to create a div in which to display the figure.
  Where you call this function will determine where the figure will appear within the layout of the app.
  The `id` parameter you provide will be used to link to other parts of the Shiny app.

  2. Define a function within the `server()` function that creates the figure.

      - The name of the function should be the same value you passed into the `id` parameter
        in your `ui.output_plot()` function call in the UI.

      - If your function calls reactive values, Shiny will update your figure whenever those values change, in a [reactive fashion](https://shiny.posit.co/py/docs/reactive-programming.html).

      - Your function should return one of the following objects:</li>

          - A `matplotlib.figure.Figure` instance
          - A `matplotlib.artist.Artist` instance
          - A list/tuple of `Figure`/`Artist` instances
          - An object with a ‘figure’ attribute pointing to a `matplotlib.figure.Figure` instance
          - A `PIL.Image.Image` instance

  3. Decorate your plotting function with a `@render.plot()` decorator.

      - If your plotting function is not the same as the `id` you used in the `ui.output_plot()`, you can add an additional `@output(id=...)` decorator.
      - If you use the `@output()` decorator, make sure it is __above__ the `@render.plot()` decorator.

You can use a plot as an input widget, collecting the locations of user clicks, double clicks, hovers, and brushes. To do this, follow the instructions provided for [plots as inputs](plot-matplotlib.html#plots-as-inputs).

## Variations

:::{#variations}
:::
