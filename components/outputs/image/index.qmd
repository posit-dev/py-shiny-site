---
title: Image
sidebar: components
preview: '<div class="px-4">

  <img width="90" src="/images/shiny.png">

  </div>

  '
listing:
- id: example
  template: ../../_partials/components-detail-example.ejs
  template-params:
    dir: components/outputs/image/
  contents:
  - title: Preview
    file: app-detail-preview.py
    height: 200
  - title: Express
    file: app-express.py
    resources:
    - shiny.png
    shinylive: https://shinylive.io/py/editor/#code=NobwRAdghgtgpmAXAAjFADugdOgnmAGlQGMB7CAFzkqVQDMAnUmZdKCgCwBsBLAI2Q8Y6UgwrIACuw4AdCHMbNkAZw48IuQcNHiG1ACZwGCpi1XrcWOAA90e5cq0ixgiOgCuFIu55y5HIzhkAF5JaQAKAH1Iuh4uOGiAShwoPUo-CB8sdQ8KSOIA4gBrPlJrcJkwVVIAd0qiSoBlDlqtKABzOAB+euQANygudzhggBUGYcSMuQABNMMGbJgOoOQAYmQAHk25Qzo2zvDExDlkM612kOQQSuUGYkqUAL1kAHpkW7UNHAh23sqajx9JxHh8wABGAAMkPQ1kqAF8zhttqdznoKO4GBALoJ9jlPFhqjUjsg4FxlEEAHLkOByQioCi4dAIFBgKjWChgeEAXSAA
  - title: Core
    file: app-core.py
    resources:
    - shiny.png
    shinylive: https://shinylive.io/py/editor/#code=NobwRAdghgtgpmAXAAjFADugdOgnmAGlQGMB7CAFzkqVQDMAnUmZdKCgCwBsBLAI2Q8Y6UgwrIACuw4AdCHMbNkAZw48IuQcNHiAgpiINqAEzgMiAVx5y5HM3GQBeSdIAUAfXd0eXOJ4CUOFBGlDbQmO5WTshWQQDmfnRcVsaucsgZMTxY6ugWFO7EdsQA1nykAB5pYKqkAO4yhMiNAMoc9VpQCQD8jUQAblDJcI4AKgwWcP4E6ZmxpPl5BUJdcNUrCY3TGQDEyAA8+3L+YXKmdCpm-WauuflECxRLRMpwyso85P6IsxkAAiFTAwcjBVrsDkcIJlkOdOglXN9ftCtHFoiBGsoGMRGig7EZkAB6Zo1NQaHAQOJ9Yl1HjGTg44kARgADMz0BVGgBfcGHJHQowUCwMKFCVE8C53ChYWp1BHIOBcV7IABy5Dgp3C6Gi+nQrgw6EiPBeVzMJwgTTAFFw6AQKEtcAqFDAnIAukA
- id: relevant-functions
  template: ../../_partials/components-detail-relevant-functions.ejs
  template-params:
    dir: components/outputs/image/
  contents:
  - title: ui.output_image
    href: https://shiny.posit.co/py/api/ui.output_image.html
    signature: ui.output_image(id, width='100%', height='400px', *, inline=False,
      click=False, dblclick=False, hover=False, brush=False, fill=False)
  - title: '@render.image'
    href: https://shiny.posit.co/py/api/render.image.html
    signature: render.image(_fn=None, *, delete_file=False)
---

:::{#example}
:::

:::{#relevant-functions}
:::

## Details

To make a reactive image, follow three steps:

  1. Call [`ui.output_image()`](TODO ADD LINK) in the `app_ui` section of your app to create a div in which to display the image.

      1. Set the id argument of `ui.output_image()` to a unique value.
      2. Optionally, set `ui.output_image(inline=True)` to place the image inline with the text or elements that precede it.
      3. Optionally, set `ui.output_image(Fill=True)` to allow the image to grow or shrink to fill its container as the app is resized.

  2. Within your app's server function, define a new function whose name matches the id used above. Shiny will rerun this function whenever it needs to build or update the output with the matching id.
  The function should return the image to display as a dictionary with the following keys:

      1. `src` - The file path to the image, relative to the app directory. Required.
      2. `height`- The image height in CSS, e.g. ‘100%’ or ‘600px’. At least one of `height` or `width` must be provided.
      3. `width` - The image width in CSS,  e.g. ‘100%’ or ‘600px’. At least one of `height` or `width` must be provided.
      4. `alt` - Alt text to display for the image. Optional.
      5. `style` - A CSS style tag for the image. Optional.


  3. Decorate the function with `@render.image`. Use `@render.image(delete_file=True)` to delete the image from the server after it has been rendered.

You can use an image as an input widget, collecting the locations of user clicks, double clicks, hovers, and brushes. To do this, follow the instructions provided for [plots as inputs](plot-matplotlib.html#plots-as-inputs).
