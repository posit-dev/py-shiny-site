---
pagetitle: "Shiny for Python"
pagedescription: Shiny is package that makes it easy to build interactive web apps straight from R & Python.
image: /images/shiny-for-python.jpg
toc: false
page-layout: article
format:
  html:
    strip-comments: true
    anchor-sections: false
    smooth-scroll: true
    css:
      - index.css
repo-actions: false
---

::::{.column-screen .mx-auto .pt-0 .mt-0 .pt-xl-5  style="max-width: 1500px;"}
:::{.grid}
:::{.g-col-12 .g-col-xl-6 .hero-text .pt-5 .pt-md-4 .px-3 .px-md-5 .pe-xl-0}

<div class="gradient-text display-1 fw-bolder" style="letter-spacing: -3px;">
Reactive data & AI&nbsp;apps in pure Python
</div>

<p class="h4">
Elegant, efficient, and ready for production
</p>

::: {.pt-4 .pb-4 style="z-index:1;"}
[Install ðŸ“¦](#install){.btn .btn-dark .btn-lg .me-2 .px-4 role="button"}
[Learn ðŸ“š](docs/overview.qmd){.btn .btn-dark .btn-lg .m-2 .px-4 role="button"}
[Shiny for AI ðŸ¤–](docs/genai-inspiration.qmd){.btn .btn-dark .btn-lg .m-2 .px-4 role="button"}
:::


:::
:::{.g-col-12 .g-col-md-10 .g-start-md-2 .g-start-xl-0  .g-col-xl-6 .hero-carousel .mb-5}
```{=html}
<div id="carouselExampleCaptions" class="carousel carousel-dark carousel-fade slide" data-bs-ride="carousel">
  <div class="carousel-indicators">
    <button type="button" data-bs-target="#carouselExampleCaptions" data-bs-slide-to="0" class="active" aria-current="true" aria-label="Slide 1"></button>
    <button type="button" data-bs-target="#carouselExampleCaptions" data-bs-slide-to="1" aria-label="Slide 2"></button>
    <button type="button" data-bs-target="#carouselExampleCaptions" data-bs-slide-to="2" aria-label="Slide 3"></button>
    <button type="button" data-bs-target="#carouselExampleCaptions" data-bs-slide-to="3" aria-label="Slide 4"></button>
    <button type="button" data-bs-target="#carouselExampleCaptions" data-bs-slide-to="4" aria-label="Slide 5"></button>
  </div>
  <div class="carousel-inner">
    <div class="carousel-item bg-white shadow p-3 active">
      <a href="templates/dashboard-tips">
        <img src="/images/dashboard-tips.png" class="d-block" alt="A screenshot of the dashboard-tips template">
      </a>
      <div class="carousel-caption">
        <p>
          Quickly build attractive and scalable <a href="templates/dashboard-tips">dashboards</a>.
        </p>
      </div>
    </div>
    <div class="carousel-item bg-white shadow p-3">
      <a href="templates/querychat">
        <img src="/images/querychat.png" class="d-block" alt="A screenshot of an AI app that enables data querying via natural language.">
      </a>
      <div class="carousel-caption">
        <p>
          Easily leverage AI to <a href="templates/querychat">query data</a> using natural language.
        </p>
      </div>
    </div>
    <div class="carousel-item bg-white shadow p-3">
      <a href="https://gallery.shinyapps.io/template-map-distance/">
        <img src="/images/map-dark.jpg" class="d-block" alt="A screenshot of an dashboard that includes an ipyleaflet map.">
      </a>
      <div class="carousel-caption">
        <p>
          Take your UI to the next-level with components like <a href="components/outputs/value-box">value boxes</a> and <a href="components/inputs/dark-mode/">dark mode</a>.
        </p>
      </div>
    </div>
    <div class="carousel-item bg-white shadow p-3">
      <a href="https://gallery.shinyapps.io/superzip/">
        <img src="/images/superzip.png" class="d-block" alt="A screenshot of an dashboard that includes an ipyleaflet map.">
      </a>
      <div class="carousel-caption">
        <p>
          Create rich interactive data experiences with packages you already know like pandas and plotly.
        </p>
      </div>
    </div>
    <div class="carousel-item bg-white shadow p-3">
      <a href="https://shinylive.io/py/app/#orbit-simulation"> <img src="/images/screen24.png" class="d-block" alt="Shiny Orbit Simulation App"></a>
      <div class="carousel-caption">
        <p>
          Combine the power of Python with reactivity to create sophisticated apps like this
          <a href="https://shinylive.io/py/app/#orbit-simulation">three-body problem simulator</a>.
      </div>
    </div>
  </div>
  <!-- <button class="carousel-control-prev" type="button" data-bs-target="#carouselExampleCaptions" data-bs-slide="prev">
    <span class="carousel-control-prev-icon" aria-hidden="true"></span>
    <span class="visually-hidden">Previous</span>
  </button>
  <button class="carousel-control-next" type="button" data-bs-target="#carouselExampleCaptions" data-bs-slide="next">
    <span class="carousel-control-next-icon" aria-hidden="true"></span>
    <span class="visually-hidden">Next</span>
  </button> -->
</div>
<style type="text/css">
  #quarto-document-content {
    overflow: hidden;
  }
</style>
```
:::

:::
::::


::::{.column-screen-inset .py-5 .mt-5 .mb-4 .mx-auto style="max-width:1200px;"}
:::{.grid}
:::{.g-col-12 .g-col-md-4 .feature-section .mx-3}

### Reactive

Shiny eliminates the hassle of manual state management.
Rather than requiring callback functions and state variables, Shiny automatically determines the best execution path for your app at runtime.
This allows you to focus on delivering insights instead of troubleshooting execution issues.

:::
:::{.g-col-12 .g-col-md-4 .feature-section .mx-3}

### Efficient

Shiny uses a reactive execution engine to minimize rerendering of your application.
Outputs are rendered on-demand and only when their upstream components change, which means that Shiny can support everything from the simplest dashboard to full-featured web apps.

:::
:::{.g-col-12 .g-col-md-4 .feature-section .mx-3}

### Robust
Shiny is built atop the modern Python web stack, leveraging [Starlette](https://www.starlette.io/) and [asyncio](https://docs.python.org/3/library/asyncio.html) for robust web applications.
It offers full support for [CSS](docs/ui-customize.html) and [JavaScript](docs/custom-component-one-off.qmd) customization, enabling rich, interactive user experiences.
:::
:::
::::


:::::: {.column-screen .py-5 .bg-dark-blue .mb-0 .px-3 .px-md-5 #install}

::::: {.column-body .d-flex .justify-content-center}

:::: { style="width: 100%; max-width: 585px;"}

## Getting started with Shiny is easy:

:::{.big-number-container .pt-3}
<p class="mb-0 big-number white">1</p>
:::{.code_container .homepage-code .w-100}
```{python}
#| eval: false
pip install shiny
```
:::
:::

:::{.big-number-container}
<p class="mb-0 big-number white">2</p>
:::{.code_container .homepage-code .w-100}
```{python}
#| eval: false
shiny create --template dashboard-tips
```
:::
:::

:::{.big-number-container}
<p class="mb-0 big-number white">3</p>
:::{.code_container .homepage-code .w-100 .ps-3}
<p class="mb-0">Use [your data](https://www.youtube.com/watch?v=ou-09NHcH5w){.white} and make the layout [your own](docs/user-interfaces.qmd){.white}.</p>
:::
:::

::::

:::::



::::: {.column-screen .hero-image .pt-4 .pb-5 style="margin-top:0px;max-width:1600px;"}
::: {.hello-output .g-col-12 .g-col-xl-12}
<iframe
  src="https://gallery.shinyapps.io/template-dashboard-tips1/"
  frameborder="0"
  width="100%"
  class="mb-0 card hello-output-iframe"
></iframe>

<style>
  .hello-output-iframe {
    height: 900px;
  }
@media only screen and (max-width: 611px) {
  .hello-output-iframe {
    height: 2125px;
  }
}
</style>
:::
:::



:::::
